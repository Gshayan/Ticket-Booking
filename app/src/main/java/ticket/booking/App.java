/*
 * This source file was generated by the Gradle 'init' task
 */
package ticket.booking;

import ticket.booking.entities.Train;
import ticket.booking.entities.User;
import ticket.booking.services.TrainService;
import ticket.booking.services.UserBookingService;
import ticket.booking.util.UserServiceUtil;

import java.io.IOException;
import java.sql.SQLOutput;
import java.util.*;

public class App {
    public static void main(String[] args)
    {
        System.out.println("Running Ticket Booking System");
        Scanner scanner = new Scanner(System.in);
        int choice = 0;
        UserBookingService userBookingService;
        try {
            userBookingService = new UserBookingService();
        }catch (IOException e){
            System.out.println("Error in loading the service.");
            return;
        }
        while(choice != 7){
            System.out.println("Choose from the following options:");
            System.out.println("1. Sign Up");
            System.out.println("2. Log In");
            System.out.println("3. Fetched Tickets");
            System.out.println("4. Search Trains");
            System.out.println("5. Book a Seat");
            System.out.println("6. Cancel my Booking");
            System.out.println("7. Exit");
            choice = scanner.nextInt();
            Train trainSelectedForBooking = new Train();
            switch (choice){
                case 1:
                    System.out.println("Enter the username to sign up");
                    String nameToSignUp = scanner.next();
                    System.out.println("Enter the password to sign up");
                    String passwordToSignUp = scanner.next();
                    User user = new User(nameToSignUp, passwordToSignUp, UserServiceUtil.hashPassword(passwordToSignUp), new ArrayList<>(), UUID.randomUUID().toString());
                    userBookingService.registerUser(user);
                    break;
                case 2:
                    System.out.println("Enter the username to log in");
                    String nameToLogIn = scanner.next();
                    System.out.println("Enter the password to log in");
                    String passwordToLogIn = scanner.next();
                    User userToLogIn = new User(nameToLogIn, passwordToLogIn, UserServiceUtil.hashPassword(passwordToLogIn), new ArrayList<>(), UUID.randomUUID().toString());
                    try {
                        userBookingService = new UserBookingService(userToLogIn);
                    }catch (IOException e){
                        System.out.println("Error in loading the service.");
                        return;
                    }
                    break;
                case 3:
                    System.out.println("Fetching your tickets");
                    userBookingService.fetchBookedTickets();
                    break;
                case 4:
                    System.out.println("Enter the Source Station");
                    String source = scanner.next();
                    System.out.println("Enter the Destination Station");
                    String destination = scanner.next();
                    List<Train> trains = userBookingService.getTrains(source, destination);
                    int i = 1;
                    for (Train train : trains) {
                        System.out.println(i+". Train Id: "+train.getTrainId());
                        for (Map.Entry<String, String> entry : train.getStationTimes().entrySet()) {
                            System.out.println("Station: "+entry.getKey()+", Time: "+entry.getValue());
                        }
                        i++;
                    }
                    System.out.println("Select the train number to book a seat");
                    int trainNumber = scanner.nextInt();
                    trainSelectedForBooking = trains.get(trainNumber-1);
                    break;
                case 5:
                    List<List<Integer>> availableSeats = trainSelectedForBooking.getSeats();
                    System.out.println("Select a Seat from the available seats");
                    

            }
        }
    }
}
